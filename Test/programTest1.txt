L2:
ADDI R1, R0, 8
ADDI R2, R0, 2
MUL  R3, R1, R2 #R3 = 16
ADD  R3, R0, R0
NEG  R4, R3 #R4 = -16
STORE R2, 0(R0) #storing 2 at mem[0]
LOAD R5, 0(R0) #R5 = 2
JAL L1 #skip the branching
BEQ R3, R0, L2
L1:
ADD R6, R1, R0 #R6 = 8
NOR R7, R2 #R7 = 0

